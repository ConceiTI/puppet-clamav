# This file is being maintained by Puppet.
# DO NOT EDIT

##
## Main options
##

# Define the interface through which we communicate with sendmail
# This option is mandatory! Possible formats are:
# [[unix|local]:]/path/to/file - to specify a unix domain socket
# inet:port@[hostname|ip-address] - to specify an ipv4 socket
# inet6:port@[hostname|ip-address] - to specify an ipv6 socket
#
# Default: no default
<% if $clamav::milter::clamd_milter_miltersocket { -%>
MilterSocket <%= $clamav::milter::clamd_milter_miltersocket %>
<% } -%>

#MilterSocket /var/run/clamav-milter/clamav-milter.socket
#MilterSocket inet:7357

# Define the group ownership for the (unix) milter socket.
# Default: disabled (the primary group of the user running clamd)
#MilterSocketGroup virusgroup
<% if $clamav::milter::clamd_milter_group { -%>
MilterSocketGroup <%= $clamav::milter::clamd_milter_group %>
<% } -%>

# Sets the permissions on the (unix) milter socket to the specified mode.
# Default: disabled (obey umask)
#MilterSocketMode 660
<% if $clamav::milter::clamd_milter_milter_socket_mode { -%>
MilterSocketMode <%= $clamav::milter::clamd_milter_milter_socket_mode %>
<% } -%>

# Remove stale socket after unclean shutdown.
#
# Default: yes
#FixStaleSocket yes
<% if $clamav::milter::clamd_milter_fix_stale_socket { -%>
FixStaleSocket <%= $clamav::milter::clamd_milter_fix_stale_socket %>
<% } -%>

# Run as another user (clamav-milter must be started by root for this option to work)
#
# Default: unset (don't drop privileges)
#User clamilt
<% if $clamav::milter::clamd_milter_user { -%>
User <%= $clamav::milter::clamd_milter_user %>
<% } -%>

# Initialize supplementary group access (clamav-milter must be started by root).
#
# Default: no
#AllowSupplementaryGroups yes
<% if $clamav::milter::clamd_milter_allow_supplementary_groups { -%>
AllowSupplementaryGroups <%= $clamav::milter::clamd_milter_allow_supplementary_groups %>
<% } -%>

# Waiting for data from clamd will timeout after this time (seconds).
# Value of 0 disables the timeout.
#
# Default: 120
#ReadTimeout 300
<% if $clamav::milter::clamd_milter_read_timeout { -%>
ReadTimeout <%= $clamav::milter::clamd_milter_read_timeout %>
<% } -%>

# Don't fork into background.
#
# Default: no
#Foreground yes
<% if $clamav::milter::clamd_milter_foreground { -%>
Foreground <%= $clamav::milter::clamd_milter_foreground %>
<% } -%>

# Chroot to the specified directory.
# Chrooting is performed just after reading the config file and before dropping privileges.
#
# Default: unset (don't chroot)
#Chroot /newroot
<% if $clamav::milter::clamd_milter_chroot { -%>
Chroot <%= $clamav::milter::clamd_milter_chroot %>
<% } -%>

# This option allows you to save a process identifier of the listening
# daemon (main thread).
#
# Default: disabled
#PidFile /var/run/clamav-milter/clamav-milter.pid
<% if $clamav::milter::clamd_milter_pidfile { -%>
PidFile <%= $clamav::milter::clamd_milter_pidfile %>
<% } -%>

# Optional path to the global temporary directory.
# Default: system specific (usually /tmp or /var/tmp).
#
#TemporaryDirectory /var/tmp
<% if $clamav::milter::clamd_milter_temporarydirectory { -%>
TemporaryDirectory <%= $clamav::milter::clamd_milter_temporarydirectory %>
<% } -%>

##
## Clamd options
##

# Define the clamd socket to connect to for scanning.
# This option is mandatory! Syntax:
# ClamdSocket unix:path
# ClamdSocket tcp:host:port
# The first syntax specifies a local unix socket (needs an absolute path) e.g.:
#     ClamdSocket unix:/var/run/clamd/clamd.socket
# The second syntax specifies a tcp local or remote tcp socket: the
# host can be a hostname or an ip address; the ":port" field is only required
# for IPv6 addresses, otherwise it defaults to 3310, e.g.:
#     ClamdSocket tcp:192.168.0.1
#
# This option can be repeated several times with different sockets or even
# with the same socket: clamd servers will be selected in a round-robin fashion.
#
# Default: no default
#ClamdSocket tcp:scanner.mydomain:7357
<% if $clamav::milter::clamd_milter_clamd_socket { -%>
ClamdSocket <%= $clamav::milter::clamd_milter_clamd_socket %>
<% } -%>


##
## Exclusions
##

# Messages originating from these hosts/networks will not be scanned
# This option takes a host(name)/mask pair in CIRD notation and can be
# repeated several times. If "/mask" is omitted, a host is assumed.
# To specify a locally orignated, non-smtp, email use the keyword "local"
#
# Default: unset (scan everything regardless of the origin)
#LocalNet local
#LocalNet 192.168.0.0/24
#LocalNet 1111:2222:3333::/48
<% if $clamav::milter::clamd_milter_local_net { -%>
LocalNet <%= $clamav::milter::clamd_milter_local_net %>
<% } -%>

# This option specifies a file which contains a list of basic POSIX regular
# expressions. Addresses (sent to or from - see below) matching these regexes
# will not be scanned.  Optionally each line can start with the string "From:"
# or "To:" (note: no whitespace after the colon) indicating if it is,
# respectively, the sender or recipient that is to be whitelisted.
# If the field is missing, "To:" is assumed.
# Lines starting with #, : or ! are ignored.
#
# Default unset (no exclusion applied)
#Whitelist /etc/whitelisted_addresses
<% if $clamav::milter::clamd_milter_whitelist { -%>
Whitelist <%= $clamav::milter::clamd_milter_whitelist %>
<% } -%>

# Messages from authenticated SMTP users matching this extended POSIX
# regular expression (egrep-like) will not be scanned.
# As an alternative, a file containing a plain (not regex) list of names (one
# per line) can be specified using the prefix "file:".
# e.g. SkipAuthenticated file:/etc/good_guys
#
# Note: this is the AUTH login name!
#
# Default: unset (no whitelisting based on SMTP auth)
#SkipAuthenticated ^(tom|dick|henry)$
<% if $clamav::milter::clamd_milter_skip_authenticated { -%>
SkipAuthenticated <%= $clamav::milter::clamd_milter_skip_authenticated %>
<% } -%>

# Messages larger than this value won't be scanned.
# Make sure this value is lower or equal than StreamMaxLength in clamd.conf
#
# Default: 25M
#MaxFileSize 10M
<% if $clamav::milter::clamd_milter_max_file_size { -%>
MaxFileSize <%= $clamav::milter::clamd_milter_max_file_size %>
<% } -%>

##
## Actions
##

# The following group of options controls the delievery process under
# different circumstances.
# The following actions are available:
# - Accept
#   The message is accepted for delievery
# - Reject
#   Immediately refuse delievery (a 5xx error is returned to the peer)
# - Defer
#   Return a temporary failure message (4xx) to the peer
# - Blackhole (not available for OnFail)
#   Like Accept but the message is sent to oblivion
# - Quarantine (not available for OnFail)
#   Like Accept but message is quarantined instead of being delivered
#
# NOTE: In Sendmail the quarantine queue can be examined via mailq -qQ
# For Postfix this causes the message to be placed on hold
#
# Action to be performed on clean messages (mostly useful for testing)
# Default: Accept
#OnClean Accept
<% if $clamav::milter::clamd_milter_on_clean { -%>
OnClean <%= $clamav::milter::clamd_milter_on_clean %>
<% } -%>

# Action to be performed on infected messages
# Default: Quarantine
#OnInfected Quarantine
<% if $clamav::milter::clamd_milter_on_infected { -%>
OnInfected <%= $clamav::milter::clamd_milter_on_infected %>
<% } -%>

# Action to be performed on error conditions (this includes failure to
# allocate data structures, no scanners available, network timeouts,
# unknown scanner replies and the like)
# Default: Defer
#OnFail Defer
<% if $clamav::milter::clamd_milter_on_fail { -%>
OnFail <%= $clamav::milter::clamd_milter_on_fail %>
<% } -%>

# This option allows to set a specific rejection reason for infected messages
# and it's therefore only useful together with "OnInfected Reject"
# The string "%v", if present, will be replaced with the virus name.
# Default: MTA specific
#RejectMsg
<% if $clamav::milter::clamd_milter_reject_msg { -%>
RejectMsg <%= $clamav::milter::clamd_milter_reject_msg %>
<% } -%>

# If this option is set to "Replace" (or "Yes"), an "X-Virus-Scanned" and an
# "X-Virus-Status" headers will be attached to each processed message, possibly
# replacing existing headers.
# If it is set to Add, the X-Virus headers are added possibly on top of the
# existing ones.
# Note that while "Replace" can potentially break DKIM signatures, "Add" may
# confuse procmail and similar filters.
# Default: no
#AddHeader Replace
<% if $clamav::milter::clamd_milter_add_header { -%>
AddHeader <%= $clamav::milter::clamd_milter_add_header %>
<% } -%>

# When AddHeader is in use, this option allows to arbitrary set the reported
# hostname. This may be desirable in order to avoid leaking internal names.
# If unset the real machine name is used.
# Default: disabled
#ReportHostname my.mail.server.name
<% if $clamav::milter::clamd_milter_report_hostname { -%>
ReportHostname <%= $clamav::milter::clamd_milter_report_hostname %>
<% } -%>

# Execute a command (possibly searching PATH) when an infected message is found.
# The following parameters are passed to the invoked program in this order:
# virus name, queue id, sender, destination, subject, message id, message date.
# Note #1: this requires MTA macroes to be available (see LogInfected below)
# Note #2: the process is invoked in the context of clamav-milter
# Note #3: clamav-milter will wait for the process to exit. Be quick or fork to
# avoid unnecessary delays in email delievery
# Default: disabled
#VirusAction /usr/local/bin/my_infected_message_handler
<% if $clamav::milter::clamd_milter_virus_action { -%>
VirusAction <%= $clamav::milter::clamd_milter_virus_action %>
<% } -%>

##
## Logging options
##

# Uncomment this option to enable logging.
# LogFile must be writable for the user running daemon.
# A full path is required.
#
# Default: disabled
#LogFile /var/log/clamav-milter.log
<% if $clamav::milter::clamd_milter_logfile { -%>
LogFile <%= $clamav::milter::clamd_milter_logfile %>
<% } -%>

# By default the log file is locked for writing - the lock protects against
# running clamav-milter multiple times.
# This option disables log file locking.
#
# Default: no
#LogFileUnlock yes
<% if $clamav::milter::clamd_milter_log_file_unlock { -%>
LogFileUnlock <%= $clamav::milter::clamd_milter_log_file_unlock %>
<% } -%>

# Maximum size of the log file.
# Value of 0 disables the limit.
# You may use 'M' or 'm' for megabytes (1M = 1m = 1048576 bytes)
# and 'K' or 'k' for kilobytes (1K = 1k = 1024 bytes). To specify the size
# in bytes just don't use modifiers. If LogFileMaxSize is enabled, log
# rotation (the LogRotate option) will always be enabled.
#
# Default: 1M
#LogFileMaxSize 2M
<% if $clamav::milter::clamd_milter_log_file_max_size { -%>
LogFileMaxSize <%= $clamav::milter::clamd_milter_log_file_max_size %>
<% } -%>

# Log time with each message.
#
# Default: no
#LogTime yes
<% if $clamav::milter::clamd_milter_log_time { -%>
LogTime <%= $clamav::milter::clamd_milter_log_time %>
<% } -%>

# Use system logger (can work together with LogFile).
#
# Default: no
LogSyslog yes
<% if $clamav::milter::clamd_milter_logsyslog { -%>
LogSyslog <%= $clamav::milter::clamd_milter_logsyslog %>
<% } -%>

# Specify the type of syslog messages - please refer to 'man syslog'
# for facility names.
#
# Default: LOG_LOCAL6
#LogFacility LOG_MAIL
<% if $clamav::milter::clamd_milter_log_facility { -%>
LogFacility <%= $clamav::milter::clamd_milter_log_facility %>
<% } -%>

# Enable verbose logging.
#
# Default: no
#LogVerbose yes
<% if $clamav::milter::clamd_milter_log_verbose { -%>
LogVerbose <%= $clamav::milter::clamd_milter_log_verbose %>
<% } -%>

# Enable log rotation. Always enabled when LogFileMaxSize is enabled.
# Default: no
#LogRotate yes
<% if $clamav::milter::clamd_milter_logrotate { -%>
LogRotate <%= $clamav::milter::clamd_milter_logrotate %>
<% } -%>

# This option allows to tune what is logged when a message is infected.
# Possible values are Off (the default - nothing is logged),
# Basic (minimal info logged), Full (verbose info logged)
# Note:
# For this to work properly in sendmail, make sure the msg_id, mail_addr,
# rcpt_addr and i macroes are available in eom. In other words add a line like:
# Milter.macros.eom={msg_id}, {mail_addr}, {rcpt_addr}, i
# to your .cf file. Alternatively use the macro:
# define(`confMILTER_MACROS_EOM', `{msg_id}, {mail_addr}, {rcpt_addr}, i')
# Postfix should be working fine with the default settings.
#
# Default: disabled
#LogInfected Basic
<% if $clamav::milter::clamd_milter_log_infected { -%>
LogInfected <%= $clamav::milter::clamd_milter_log_infected %>
<% } -%>

# This option allows to tune what is logged when no threat is found in a scanned message.
# See LogInfected for possible values and caveats.
# Useful in debugging but drastically increases the log size.
# Default: disabled
#LogClean Basic
<% if $clamav::milter::clamd_milter_log_clean { -%>
LogClean <%= $clamav::milter::clamd_milter_log_clean %>
<% } -%>

# This option affects the behaviour of LogInfected, LogClean and VirusAction
# when a message with multiple recipients is scanned:
# If SupportMultipleRecipients is off (the default)
# then one single log entry is generated for the message and, in case the
# message is determined to be malicious, the command indicated by VirusAction
# is executed just once. In both cases only the last recipient is reported.
# If SupportMultipleRecipients is on:
# then one line is logged for each recipient and the command indicated
# by VirusAction is also executed once for each recipient.
#
# Note: although it's probably a good idea to enable this option, the default value
# is currently set to off for legacy reasons.
# Default: no
#SupportMultipleRecipients yes
<% if $clamav::milter::clamd_milter_support_multiple_recipients { -%>
SupportMultipleRecipients <%= $clamav::milter::clamd_milter_support_multiple_recipients %>
<% } -%>
